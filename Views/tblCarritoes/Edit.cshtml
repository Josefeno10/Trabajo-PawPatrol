@model PedidosComida.Models.tblCarrito

@{
 administrarpedidos
    ViewBag.Title = "Editar producto en el carrito";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center mb-4"><i class="bi bi-pencil-square"></i> Editar producto en el carrito</h2>
 master

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
administrarpedidos

    @Html.HiddenFor(model => model.ID_Detalle)

    <div class="row justify-content-center">
        <div class="col-md-8">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="mb-3">
                @Html.LabelFor(model => model.ID_Pedido, "Pedido asociado", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownList("ID_Pedido", null, htmlAttributes: new { @class = "form-select" })
 master
                @Html.ValidationMessageFor(model => model.ID_Pedido, "", new { @class = "text-danger" })
            </div>

 administrarpedidos
            <div class="mb-3">
                @Html.LabelFor(model => model.ID_Producto, "Producto", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownList("ID_Producto", null, htmlAttributes: new { @class = "form-select", @id = "productoSelect" })

        <div class="form-group">
            @Html.LabelFor(model => model.ID_Producto, "ID_Producto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ID_Producto", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
 master
                @Html.ValidationMessageFor(model => model.ID_Producto, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", @id = "cantidadInput", @type = "number", min = "1" } })
                @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "subtotalInput" } })
                @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
            </div>

administrarpedidos
            <div class="text-center">
                <button type="submit" class="btn btn-primary px-4">
                    <i class="bi bi-check-circle"></i> Guardar cambios
                </button>
master
            </div>
        </div>
    </div>
}

 administrarpedidos
<div class="mt-4 text-center">
    @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-outline-secondary" })
</div>

 master
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Diccionario de precios que debes pasar desde el controlador
        var precios = @Html.Raw(Json.Encode(ViewBag.Precios));

        function calcularSubtotal() {
            var idProducto = $("#productoSelect").val();
            var cantidad = parseInt($("#cantidadInput").val()) || 1;
            var precio = precios[idProducto] || 0;
            var subtotal = cantidad * precio;
            $("#subtotalInput").val(subtotal.toFixed(2));
        }

        $(document).ready(function () {
            $("#productoSelect, #cantidadInput").on("change keyup", calcularSubtotal);
            calcularSubtotal(); // inicial
        });
    </script>
}
