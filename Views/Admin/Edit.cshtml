@model PedidosComida.Models.tblPedido

@{
    ViewBag.Title = "Edit";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-success text-white">
            <h4 class="mb-0">
                <i class="bi bi-pencil-square"></i> Editar Pedido
            </h4>
        </div>
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                @Html.HiddenFor(model => model.ID_Pedido)

                <div class="mb-3">
                    @Html.LabelFor(model => model.NombreCliente, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-person-fill"></i></span>
                        @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Direccion, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-geo-alt-fill"></i></span>
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Telefono, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-telephone-fill"></i></span>
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.FechaHora, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-calendar-event-fill"></i></span>
                        @Html.EditorFor(model => model.FechaHora, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.FechaHora, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Total, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Estado, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-info-circle-fill"></i></span>
                        @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>

                <div class="d-flex justify-content-between">
                    <input type="submit" value="Guardar cambios" class="btn btn-success" />
                    @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-outline-secondary" })
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
